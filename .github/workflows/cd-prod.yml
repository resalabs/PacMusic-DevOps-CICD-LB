name: Deploy Production ðŸš€

on:
  release:
    types:
      - published
      - edited

jobs:
  deploy-to-production:
    runs-on: ubuntu-latest
    environment: production

    steps:
      - name: Execute deployment script on production server
        uses: appleboy/ssh-action@v0.1.6
        with:
          host: ${{ secrets.SSH_HOST_PRODUCTION }}
          username: ${{ secrets.SSH_USER_NAME_PRODUCTION }}
          key: ${{ secrets.SSH_PRIVATE_KEY_PRODUCTION }}
          script: |
            sudo docker login -u ${{ secrets.DOCKERHUB_USERNAME }} -p ${{ secrets.DOCKERHUB_TOKEN }}

            if [ -d "${{ secrets.APP_PROD_PATH }}" ]; then
              cd ${{ secrets.APP_PROD_PATH }}
              sudo docker compose down
              git pull origin main
            else
              ssh-keyscan github.com > ~/.ssh/known_hosts
              git clone ${{ secrets.GIT_URL }} ${{ secrets.APP_PROD_PATH }}
              cd ${{ secrets.APP_PROD_PATH }}
            fi

            echo "APP_IMAGE=${{ secrets.DOCKERHUB_USERNAME }}/pacmusic" > .env
            echo "APP_TAG=${{ github.ref_name }}" >> .env
            echo "APP_PROD_PORT_1=${{ secrets.APP_PROD_PORT_1 }}" >> .env
            echo "APP_PROD_PORT_2=${{ secrets.APP_PROD_PORT_2 }}" >> .env
            echo "MINIO_PROD_ENDPOINT=${{ secrets.MINIO_PROD_ENDPOINT }}" >> .env
            echo "MINIO_PROD_ACCESS_KEY=${{ secrets.MINIO_PROD_ACCESS_KEY }}" >> .env
            echo "MINIO_PROD_SECRET_KEY=${{ secrets.MINIO_PROD_SECRET_KEY }}" >> .env

            sudo docker compose up --build --detach pacmusic-prod-1 pacmusic-prod-2

      - name: Test application endpoint
        run: |
          sleep 20
          curl -f ${{ secrets.PROD_URL_1 }}
          curl -f ${{ secrets.PROD_URL_2 }}
